import "comparison"
import "control"
import "destructuring"
import "functional"
import "io"
import "lists"
import "strings"

import "utils"


def rest-string (the-string)
  set size (strlen the-string)
  if (equal size 1)
    return ""

  return (substr the-string 1 size)


def get-codepoints (the-string result)
  if (equal the-string "")
    return (reverse result)

  set codepoint (substr the-string 0 1)
  set next-string (rest-string the-string)
  set next-result (prepend codepoint result)

  return (get-codepoints next-string next-result)


def get-items (line)
  return
    get-codepoints line nil


def group-by (n items current result)
  if (equal
        length current
        n)
    return
      group-by n items nil (prepend current result)

  if (not items)
    return (reverse result)

  set next-item (first items)
  set remaining (rest items)
  set next-current (prepend next-item current)
  return
    group-by n remaining next-current result


def find-overlap (a b c)
  if (not a)
    raise "Rucksack groups should always have one overlap"

  set item (first a)
  if (and
      contains b item
      contains c item)
    return item

  set next-a (rest a)
  return (find-overlap next-a b c)


def get-overlap (group)
  set-many (a b c) group
  return (find-overlap a b c)


set PRIORITIES
  "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"


def get-priority (item)
  set index (find PRIORITIES item)
  return (+ index 1)


def main (args)
  set lines (read-all)
  set rucksacks (map get-items lines)
  set groups (group-by 3 rucksacks nil nil)
  set overlaps (map get-overlap groups)
  set priorities (map get-priority overlaps)
  set total (sum priorities)
  print total
  return 0
